#!/bin/bash
#
# Installs IBM Cell/B.E. SDK 3.0 in Fedora 12 (ppc) on Playstation 3
#
# NOTE: Script assumes your Fedora 12 package manager (yum) has access
# to working Fedora 12 software repositories. If not, then you should
# clone/run my other script "ps3-goodrepos" first, which will configure
# your system to access the online Fedora 12 repo archives. Then run this
# script after. Happy SPUing :-)
#
# RUN AS ROOT
#

if [ $(id -u) != 0 ]; then
    printf "Please run script as root.\n"
    exit 1
fi

cp -fv rpm-gpg/RPM-GPG-KEY-cellsdk /etc/pki/rpm-gpg/RPM-GPG-KEY-cellsdk
cp -fv rpm-gpg/RPM-GPG-KEY-cellsdk-open /etc/pki/rpm-gpg/RPM-GPG-KEY-cellsdk-open
cp -fv yum.repos.d/cellsdk.repo /etc/yum.repos.d/cellsdk.repo

yum clean all
yum makecache

yum -y groupinstall "Cell Runtime Environment" "Cell Development Tools" "Cell Development Libraries" "Cell Programming Examples"
yum -y install expat expat.ppc64 rsync sed wget ed alf-trace-devel dacs-trace-devel.ppc64 libfft-devel libmc-rand-devel pdtr pdt  pdt-devel pdt.ppc64 pdt-devel.ppc64 trace-devel cell-xlc-ssc-cmp cell-xlc-ssc-help cell-xlc-ssc-lib cell-xlc-ssc-man cell-xlc-ssc-omp cell-xlc-ssc-rte cell-xlc-ssc-rte-lnk ppu-gcc-fortran ppu-gcc-gnat ppu-gcc43 ppu-gcc43-c++ ppu-gcc43-fortran spu-gcc-fortran spu-gcc43 spu-gcc43-c++ spu-gcc43-fortran cell-compliance-tests cell-compliance-tests-source libfft-examples-source libfft alf-trace cell-spu-timing cellperfctr-driver cellperfctr-tools dacs-trace.ppc64 fdprpro trace trace.ppc64 elfspe2 netpbm netpbm-devel netpbm.ppc64 netpbm-devel.ppc64 numactl numactl-devel numactl.ppc64 numactl-devel.ppc64 libspe2 libspe2-devel libspe2.ppc64 libspe2-devel.ppc64 glibc glibc-devel glibc.ppc64 glibc-devel.ppc64 libstdc++ libstdc++-devel libstdc++.ppc64 libstdc++-devel.ppc64 libspe2-adabinding-devel.ppc64 libspe2man oprofile oprofile-gui tcl.ppc64 tk.ppc64 ppu-binutils spu-binutils spu-newlib dacs.ppc64 dacs-devel.ppc64 ppu-simdmath ppu-simdmath-devel ppu-simdmath.ppc64 ppu-simdmath-devel.ppc64 alf alf-devel alf.ppc64 alf-devel.ppc64 alf-trace.ppc64 alf-trace-devel.ppc64 alfman blas blas-devel blas.ppc64 blas-devel.ppc64 ppu-mass-devel ppu-mass-devel.ppc64 cell-libs cell-libs-devel cell-libs.ppc64 cell-libs-devel.ppc64 cell-libs-source
# cellide alf-ide-template

printf "\nREBOOT\n\n"

exit 0

